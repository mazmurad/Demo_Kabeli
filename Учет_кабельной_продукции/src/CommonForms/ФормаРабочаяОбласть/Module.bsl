#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Выборка = Справочники.Подрядчик.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокВыбораПодрядчика.Добавить(Выборка.Ссылка, Выборка.Ссылка);		
	КонецЦикла;
	
	ПрочитатьПроектныйКабельныйЖурнал();
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СоздатьЗаданияНаЗакупку(Команда)
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Форма", ЭтотОбъект);
	ПараметрыОбъекта.Вставить("СписокВыбораПодрядчика", СписокВыбораПодрядчика);
	ПараметрыОбъекта.Вставить("ИмяОбъекта", "ЗадниеНаЗакупку");	     
	ПараметрыОбъекта.Вставить("Подрядчик", ОбщегоНазначенияПереопределяемый.ПодрядчикТекущегоПользователя());	    			
	ФормыДокументовОбработчикиКоманд.ВыборПодрядчикаИКабельныеЛинии(ПараметрыОбъекта);
	
КонецПроцедуры   

&НаКлиенте
Процедура СоздатьЗаявкиНаЗакупку(Команда)
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Форма", ЭтотОбъект);
	ПараметрыОбъекта.Вставить("СписокВыбораПодрядчика", СписокВыбораПодрядчика);
	ПараметрыОбъекта.Вставить("ИмяОбъекта", "ЗаявкиНаЗакупку");	
	ПараметрыОбъекта.Вставить("ОтборыКабельныхЛиний", "ПоРегиструЗаданияЗакупкиПринятыеКабельныеЛинии");
	ПараметрыОбъекта.Вставить("Подрядчик", ОбщегоНазначенияПереопределяемый.ПодрядчикТекущегоПользователя());	    			
	ФормыДокументовОбработчикиКоманд.ВыборПодрядчикаИКабельныеЛинии(ПараметрыОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкиНаМонтаж(Команда)
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Форма", ЭтотОбъект);
	ПараметрыОбъекта.Вставить("СписокВыбораПодрядчика", СписокВыбораПодрядчика);
	ПараметрыОбъекта.Вставить("ИмяОбъекта", "ЗаявкаНаМонтаж");	
	ПараметрыОбъекта.Вставить("ОтборыКабельныхЛиний", "ОтборВКПройден");	
	ПараметрыОбъекта.Вставить("Подрядчик", ОбщегоНазначенияПереопределяемый.ПодрядчикТекущегоПользователя());	    			
	ФормыДокументовОбработчикиКоманд.ВыборПодрядчикаИКабельныеЛинии(ПараметрыОбъекта);
		
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийСтраниц  
&НаКлиенте
Процедура СтраницыРабочейОбластиПриСменеСтраницы(Элемент, ТекущаяСтраница)

	ПрочитатьПроектныйКабельныйЖурнал();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПеремещенияЗадачСписокЗадач   
&НаКлиенте
Процедура ЗадачиНужноВыполнитьПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусыЗадачКлиент(ПараметрыПеретаскивания.Значение, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.НужноСделать"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиТестированиеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусыЗадачКлиент(ПараметрыПеретаскивания.Значение, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Тестирование"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиГотовоПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	ОбновитьСтатусыЗадачКлиент(ПараметрыПеретаскивания.Значение, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Готово"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиВРаботеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	ОбновитьСтатусыЗадачКлиент(ПараметрыПеретаскивания.Значение, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.ВРаботе"));
	
КонецПроцедуры   

&НаКлиенте
Процедура ОбновитьСтатусыЗадачКлиент(МассивЗадач, НовыйСтатус)

	Если ТипЗнч(МассивЗадач) = Тип("Массив") Тогда 
		ОбновитьСтатусыЗадач(МассивЗадач, НовыйСтатус);
	КонецЕсли;	
	
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.ЗадачиПользователям"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСтатусыЗадач(МассивЗадач, НовыйСтатус) 
	
	Для Каждого ТекЗадча Из МассивЗадач Цикл   
		
		ЗадачаОбъект = ТекЗадча.ПолучитьОбъект();   
		Если ЗадачаОбъект.Статус = НовыйСтатус Тогда 			
			Продолжить;
		КонецЕсли;
		
		Если НовыйСтатус = Перечисления.СтатусыЗадач.Готово Тогда
			ЗадачаОбъект.Выполнена = Истина;
		КонецЕсли;	
		
		ЗадачаОбъект.Статус	= НовыйСтатус;   
		Попытка
			ЗадачаОбъект.Записать();    
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю("Не удалось изменить статус задачи " 
				+ ТекЗадча + " по причине " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры	
#КонецОбласти

#Область ПрочиеПроцедурыИФункции
&НаСервереБезКонтекста
Функция СоздатьЗаданиеНаЗакупки(Подрядчик, МассивДанныхЗагрузкиТЧ) Экспорт
	
	НовоеЗадание                 = Документы.ЗаданияНаЗакупку.СоздатьДокумент();
	НовоеЗадание.Дата            = ТекущаяДатаСеанса();
	НовоеЗадание.СтатусДокумента = Перечисления.СтатусыЗаданийНаЗакупку.ВыданоПодрядчику; 
	НовоеЗадание.Подрядчик       = Подрядчик;
	
	Для каждого ТекКабельнаяЛиния Из МассивДанныхЗагрузкиТЧ Цикл
		НовКабельнаяЛиния                = НовоеЗадание.КабельныеЛинии.Добавить();
		НовКабельнаяЛиния.КабельнаяЛиния = ТекКабельнаяЛиния.КабельнаяЛиния;     
		НовКабельнаяЛиния.ЖурналУчетаКП  = ТекКабельнаяЛиния.ЖурналУчетаКП;     		
		НовКабельнаяЛиния.Принято        = Истина;
	КонецЦикла;
	
	НовоеЗадание.Записать();
	
	Возврат НовоеЗадание.Ссылка; 
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьЗаявкуНаЗакупки(Подрядчик, МассивДанныхЗагрузкиТЧ) Экспорт
	
	НоваяЗаявка           = Документы.ЗаявкиНаЗакупки.СоздатьДокумент();
	НоваяЗаявка.Дата      = ТекущаяДатаСеанса();
	НоваяЗаявка.Статус    = Перечисления.СтатусыЗаявкиНаЗакупку.ОжидаетЗаявку; 
	НоваяЗаявка.Подрядчик = Подрядчик;
	
	Для каждого ТекКабельнаяЛиния Из МассивДанныхЗагрузкиТЧ Цикл
		НовКабельнаяЛиния                = НоваяЗаявка.КабельныеЛинии.Добавить();
		НовКабельнаяЛиния.КабельнаяЛиния = ТекКабельнаяЛиния.КабельнаяЛиния;     
		НовКабельнаяЛиния.ЖурналУчетаКП  = ТекКабельнаяЛиния.ЖурналУчетаКП;     				
	КонецЦикла;
	
	НоваяЗаявка.Записать();
	
	Возврат НоваяЗаявка.Ссылка; 
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьЗаявкуНаМонтаж(Подрядчик, МассивДанныхЗагрузкиТЧ) Экспорт
	
	НоваяЗаявка           = Документы.ЗаявкаНаМонтаж.СоздатьДокумент();
	НоваяЗаявка.Дата      = ТекущаяДатаСеанса();
	НоваяЗаявка.Статус    = Перечисления.СтатусыЗаявкиНаМонтаж.НеВыполнено; 
	НоваяЗаявка.Подрядчик = Подрядчик;
	
	Для Каждого ТекКабельнаяЛиния Из МассивДанныхЗагрузкиТЧ Цикл
		НовКабельнаяЛиния                 = НоваяЗаявка.КабельныеЛинии.Добавить();
		НовКабельнаяЛиния.КабельнаяЛиния  = ТекКабельнаяЛиния.КабельнаяЛиния;     
		НовКабельнаяЛиния.ЖурналУчетаКП   = ТекКабельнаяЛиния.ЖурналУчетаКП;   
		НовКабельнаяЛиния.РазрешитьМонтаж = Ложь;
	КонецЦикла;
	
	НоваяЗаявка.Записать();	
	Возврат НоваяЗаявка.Ссылка; 
	
КонецФункции

&НаСервере
Процедура ПрочитатьПроектныйКабельныйЖурнал()
	
	Запрос       = Новый Запрос;
	Запрос.Текст = ЗапросДляЧтенияПроектныйКабельныйЖурнал();	
	
	ДанныеИзБазыДляУчетаКП = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);	
	ЗначениеВРеквизитФормы(ДанныеИзБазыДляУчетаКП, "ПроектныйКабельныйЖурнал");	
	
КонецПроцедуры	

&НаСервере
Функция ЗапросДляЧтенияПроектныйКабельныйЖурнал()  
	
	ЗапросТекст =  "ВЫБРАТЬ
	               |	ДанныеБазыЖурнал.ЖурналКабельнойПродукции КАК ЖурналКабельнойПродукции,
				   |	ДанныеБазыЖурнал.Изм КАК Изм,
				   |	ДанныеБазыЖурнал.ЖурналКабельнойПродукции.Объект КАК Объект,
				   |	ДанныеБазыЖурнал.МаркировкаКабеля.Наименование КАК МаркировкаКабеля,
				   |	ДанныеБазыЖурнал.КабельнаяЛиния.МаркировкаКабеляПроектная.Наименование КАК МаркировкаКабеляПроектная,
				   |	ДанныеБазыЖурнал.КабельнаяЛиния.СечениеПроектное.Наименование КАК СечениеПроектное,
				   |	ДанныеБазыЖурнал.КабельнаяЛиния.КлассБезопасности КАК КлассБезопасности,
				   |	ДанныеБазыЖурнал.ОткудаПомещение КАК ОткудаПомещение,
				   |	ДанныеБазыЖурнал.ОткудаОборудование КАК ОткудаОборудование,
				   |	ДанныеБазыЖурнал.ОткудаКоординаты КАК ОткудаКоординаты,
				   |	ДанныеБазыЖурнал.КудаПомещение КАК КудаПомещение,
				   |	ДанныеБазыЖурнал.КудаОборудование КАК КудаОборудование,
				   |	ДанныеБазыЖурнал.КудаКоординаты КАК КудаКоординаты,
				   |	ДанныеБазыЖурнал.ДлинаПроектная КАК ДлинаПроектная,
				   |	ДанныеБазыЖурнал.ДлинаФактическая КАК ДлинаФактическая,
				   |	ДанныеБазыЖурнал.ЖурналКабельнойПродукции.Трассировка КАК Трассировка,
				   |	ДанныеБазыЖурнал.СтатусКабельнойЛинии КАК Статус,
				   |	ДанныеБазыЖурнал.КабельнаяЛиния КАК КабельнаяЛиния,
				   |	ЗаданияНаЗакупкиСтатусы.Статус КАК СтатусЗаданияНаЗакупку,
				   |	ЗаданияНаЗакупкиСтатусы.Номер КАК НомерЗаданияНаЗакупку,
				   |	ЗаданияНаЗакупкиСтатусы.Дата КАК ДатаЗаданияНаЗакупку
	               |ИЗ
	               |	РегистрСведений.ДанныеЖурналовУчетаКП КАК ДанныеБазыЖурнал
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияНаЗакупкиСтатусы КАК ЗаданияНаЗакупкиСтатусы
	               |		ПО ДанныеБазыЖурнал.КабельнаяЛиния = ЗаданияНаЗакупкиСтатусы.КабельнаяЛиния
	               |ГДЕ
	               |	1 = 1
				   |ИТОГИ
				   //|	МАКСИМУМ(Объект),
				   //|	МАКСИМУМ(Трассировка)
	               |ПО
	               |	ЖурналКабельнойПродукции";
	
	Возврат ЗапросТекст;
	
КонецФункции	
#КонецОбласти

