
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если Не ЗначениеЗаполнено(ПараметрКоманды) Тогда
		Возврат;	
	КонецЕсли;
	
	СписокЗаданий = СоздатьЗаданияНаОснованииЖурналовУчетаКабелей(ПараметрКоманды);		
	Если СписокЗаданий.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаданияНаМонтаж.ФормаСписка");   

	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("СписокНовыхЗаданий", СписокЗаданий);	
	Оповестить("СозданиеЗаданийНаОснованииЖурналКабели", ПараметрыФормы); 
	
КонецПроцедуры

&НаСервере
Функция СоздатьЗаданияНаОснованииЖурналовУчетаКабелей(МассивЖурналов)
	
	СписокНовыхЗаданий            = Новый Массив;	
	ТаблицаДанныхКабельныеЛинии   = ПолучитьДанныеКабельныеЛинии(МассивЖурналов);        
	ДанныеКабельныеЛинии          = ТаблицаДанныхКабельныеЛинии.Скопировать(Новый Структура("ЕстьЗадание", Ложь));
	ДанныеКабельныеЛинииСЗаданием = ТаблицаДанныхКабельныеЛинии.Скопировать(Новый Структура("ЕстьЗадание", Истина));
	
	Для Каждого ТекДанные Из ДанныеКабельныеЛинииСЗаданием Цикл		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Есть задание по " + ТекДанные.КабельнаяЛиния);
	КонецЦикла;
	
	Если ДанныеКабельныеЛинии.Количество() = 0 Тогда
		Возврат СписокНовыхЗаданий;	
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка

		НовоеЗадание      = Документы.ЗаявкаНаМонтаж.СоздатьДокумент();
		НовоеЗадание.Дата = ТекущаяДата();	
		НовоеЗадание.КабельныеЛинии.Загрузить(ДанныеКабельныеЛинии);		
		НовоеЗадание.Записать();  
		
		СписокНовыхЗаданий.Добавить(НовоеЗадание.Ссылка);
	Исключение  
		
	    ТекстОшибки = ОписаниеОшибки();		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
			Возврат Новый Массив;
		КонецЕсли;		
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	Возврат СписокНовыхЗаданий;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеКабельныеЛинии(СписокЖурналыКабельныхЛиний)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокЖурналов", СписокЖурналыКабельныхЛиний);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.Ссылка.Проект КАК Проект,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.КабельнаяЛиния КАК КабельнаяЛиния,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.Изм КАК Изм,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.ОткудаПомещение КАК ОткудаПомещение,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.ОткудаОборудование КАК ОткудаОборудование,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.ОткудаКоординаты КАК ОткудаКоординаты,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.КудаПомещение КАК КудаПомещение,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.КудаОборудование КАК КудаОборудование,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.КудаКоординаты КАК КудаКоординаты,
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.ДлинаПроекта КАК ДлинаПроекта
	               |ПОМЕСТИТЬ ВТ_ДанныеКабельныеЛинииИзЖурналов
	               |ИЗ
	               |	Документ.ЖурналыУчетаКабельнойПродукции.КабельныеЛинии КАК ЖурналыУчетаКабельнойПродукцииКабельныеЛинии
	               |ГДЕ
	               |	ЖурналыУчетаКабельнойПродукцииКабельныеЛинии.Ссылка В(&СписокЖурналов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.Проект КАК Проект,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.КабельнаяЛиния КАК КабельнаяЛиния
	               |ПОМЕСТИТЬ ВТ_КабельныеПоЗаданиям
	               |ИЗ
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов КАК ВТ_ДанныеКабельныеЛинииИзЖурналов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданияНаМонтаж.КабельныеЛинии КАК ЗаданияНаМонтажКабельныеЛинии
	               |		ПО ВТ_ДанныеКабельныеЛинииИзЖурналов.КабельнаяЛиния = ЗаданияНаМонтажКабельныеЛинии.КабельнаяЛиния
	               |			И (ЗаданияНаМонтажКабельныеЛинии.Ссылка.ПометкаУдаления = ЛОЖЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.Проект КАК Проект,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.КабельнаяЛиния КАК КабельнаяЛиния,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.Изм КАК Изм,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.ОткудаПомещение КАК ОткудаПомещение,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.ОткудаОборудование КАК ОткудаОборудование,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.ОткудаКоординаты КАК ОткудаКоординаты,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.КудаПомещение КАК КудаПомещение,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.КудаОборудование КАК КудаОборудование,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.КудаКоординаты КАК КудаКоординаты,
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов.ДлинаПроекта КАК ДлинаПроекта,
	               |	ВЫБОР
	               |		КОГДА ВТ_КабельныеПоЗаданиям.КабельнаяЛиния ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЗадание
	               |ИЗ
	               |	ВТ_ДанныеКабельныеЛинииИзЖурналов КАК ВТ_ДанныеКабельныеЛинииИзЖурналов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КабельныеПоЗаданиям КАК ВТ_КабельныеПоЗаданиям
	               |		ПО ВТ_ДанныеКабельныеЛинииИзЖурналов.Проект = ВТ_КабельныеПоЗаданиям.Проект
	               |			И ВТ_ДанныеКабельныеЛинииИзЖурналов.КабельнаяЛиния = ВТ_КабельныеПоЗаданиям.КабельнаяЛиния";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
