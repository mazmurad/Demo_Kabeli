
#Область Печать
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати                                = КомандыПечати.Добавить();  
	КомандаПечати.МенеджерПечати                 = "Справочник.ЖурналыУчетаКабельнойПродукции";
	КомандаПечати.Идентификатор                  = "ИКЖ"; 
	КомандаПечати.МестоРазмещения                = "ПодменюПечать";
	КомандаПечати.Представление                  = Нстр("ru='Исполнительный кабельный журнал'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИКЖ");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = СформироватьПечать(МассивОбъектов);
		ПечатнаяФорма.СинонимМакета     = Нстр("ru='ИКЖ'"); 
		ПечатнаяФорма.ПолныйПутьКМакету = "Справочник.ЖурналыУчетаКабельнойПродукции.ПФ_MXL_ИКЖ";
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечать(МассивОбъектов)
	
	ТабДокумент = Новый ТабличныйДокумент;	
	ТабДокумент.КлючПараметровПечати = "ПараметрыПечати_ИКЖ";  
	ТабДокумент.АвтоМасштаб          = Истина;    
	ТабДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ЖурналыУчетаКабельнойПродукции.ПФ_MXL_ИКЖ");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЖурналыУчетаКабельнойПродукции.КабельнаяЛиния) КАК Кабель,
	               |	ЖурналыУчетаКабельнойПродукции.Проект.НомерПроекта КАК НомерПроекта,
	               |	ЖурналыУчетаКабельнойПродукции.ОткудаКоординаты.X КАК X,
	               |	ЖурналыУчетаКабельнойПродукции.ОткудаКоординаты.Y КАК Y,
	               |	ЖурналыУчетаКабельнойПродукции.ОткудаКоординаты.Z КАК Z,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЖурналыУчетаКабельнойПродукции.ОткудаПомещение) КАК Откуда,
	               |	ЖурналыУчетаКабельнойПродукции.КудаКоординаты.X КАК X1,
	               |	ЖурналыУчетаКабельнойПродукции.КудаКоординаты.Y КАК Y1,
	               |	ЖурналыУчетаКабельнойПродукции.КудаКоординаты.Z КАК Z1,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЖурналыУчетаКабельнойПродукции.КудаПомещение) КАК Куда,
	               |	ЖурналыУчетаКабельнойПродукции.ДлинаПроекта КАК Длина,
	               |	ДанныеПоМонтажуКабельнойПродукцииСрезПоследних.Период КАК ДатаПрокладки,
	               |	ДанныеПоМонтажуКабельнойПродукцииСрезПоследних.Исполнитель КАК Исполнитель,
	               |	ДанныеПоМонтажуКабельнойПродукцииСрезПоследних.Подрядчик КАК Подрядчик
	               |ИЗ
	               |	Справочник.ЖурналыУчетаКабельнойПродукции КАК ЖурналыУчетаКабельнойПродукции
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПоМонтажуКабельнойПродукции.СрезПоследних КАК ДанныеПоМонтажуКабельнойПродукцииСрезПоследних
	               |		ПО ЖурналыУчетаКабельнойПродукции.Ссылка = ДанныеПоМонтажуКабельнойПродукцииСрезПоследних.ЖурналУчетаКабельнойЛинии
	               |ГДЕ
	               |	ЖурналыУчетаКабельнойПродукции.Ссылка В(&Ссылка)";
	
	Результат = Запрос.Выполнить();	
	Выборка   = Результат.Выбрать();
	
	ИмяПоля = "";	
	Для Каждого ТекКолонка Из Результат.Колонки Цикл
		ИмяПоля = ИмяПоля + ?(ИмяПоля = "", "", ",") + ТекКолонка.Имя;	
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеПараметров = Новый Структура(ИмяПоля);		
		ЗаполнитьЗначенияСвойств(ДанныеПараметров, Выборка); 	
		
		ДанныеПараметров.Вставить("ДатаФормирования", ТекущаяДата());
		
		Шапка = Макет.ПолучитьОбласть("Шапка");		
		Шапка.Параметры.Заполнить(ДанныеПараметров); 
		ТабДокумент.Вывести(Шапка);
		
		Сноска = Макет.ПолучитьОбласть("Сноска1");
		ТабДокумент.Вывести(Сноска);
		
		ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ШапкаТаблицы);
		
		СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");     
		СтрокаТаблицы.Параметры.Заполнить(ДанныеПараметров);
		ТабДокумент.Вывести(СтрокаТаблицы);

		СведенияОбПодрядчике = ОрганизацииСервер.СведенияОбОрганизации(Выборка.Подрядчик);
		ДанныеПараметров.Вставить("ОтветственноеЛицоПодрядчика", СведенияОбПодрядчике.ОтветственноеЛицо);
		
		ПодписиИПечати = Новый Соответствие;		
		УправлениеПечатьюПереопределяемый.ПриПолученииПодписейИПечатейответственного(СведенияОбПодрядчике.ОтветственноеЛицо, ПодписиИПечати);
		
		Подписи = Макет.ПолучитьОбласть("Подписи");
		Подписи.Параметры.Заполнить(ДанныеПараметров); 
		
		Если ЗначениеЗаполнено(СведенияОбПодрядчике.ОтветственноеЛицо) Тогда
			Подписи.Рисунки.ПодписьПодрядчика.Картинка = ПодписиИПечати.Получить(
														 СведенияОбПодрядчике.ОтветственноеЛицо).ПодписьПодрядчика;			
		КонецЕсли;
		
		ТабДокумент.Вывести(Подписи);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции
#КонецОбласти

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	
	
КонецПроцедуры
