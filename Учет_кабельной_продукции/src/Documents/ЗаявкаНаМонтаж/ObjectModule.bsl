
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", Ссылка.Пустая());		
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ЭтоПодрядчик = УправлениеДоступом.ЕстьРоль("Подрядчик");
	ЭтоКуратор   = УправлениеДоступом.ЕстьРоль("Куратор");	
	ЭтоНовый     = Ложь;
	ДополнительныеСвойства.Свойство("ЭтоНовый", ЭтоНовый);
	
	УстановитьСтатусДокумент(ЭтоКуратор, ЭтоНовый);	
	СтатусыРазрешения = УстановитьСтатусРазрешенияМонтажаПоКабельнымЛиниям();		
	УстановитьСтатусыКабельныхЛиний(СтатусыРазрешения, ПометкаУдаления);  
			
	Если ПометкаУдаления Тогда  
		УдалитьСтатусЗаявкиНаМонтаж();
		УдалитьСтатусРазрешениеМонтажа();    
	Иначе
		ПроверкаПодрядчикЗавершаетМонтажПоРассматриваемымКураторомЗаявкам(Отказ, ЭтоПодрядчик); 
		Если Не Отказ Тогда
			ПроверкаПодрядчикЗавершаетМонтажПоНеРазрешеннымКураторомЗаявке(Отказ, ЭтоПодрядчик);			
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры   


#Область СлужебныеПроцедурыИФункции   
Процедура УстановитьСтатусДокумент(ЭтоКуратор, ЭтоНовый)

	УстановитьСтатусДокументаПоУмолчанию(ЭтоНовый);  
	Если Не ЭтоКуратор И Не ЭтоНовый Тогда
		СоздатьИзменитьСтатусЗаявкиНаМонтаж(Статус);		
	КонецЕсли;
	
КонецПроцедуры

Функция УстановитьСтатусРазрешенияМонтажаПоКабельнымЛиниям()

	СтатусыРазрешения = ПолучитьСтатусыРазрешенияМонтажаПоКабельнымЛиниям();   
	Если СтатусыРазрешения.Количество() <> 0 Тогда
		СоздатьИзменитьСтатусРазрешениеМонтажа(СтатусыРазрешения);				
	КонецЕсли;
	
	Возврат СтатусыРазрешения;
	
КонецФункции

Функция ПолучитьСтатусыРазрешенияМонтажаПоКабельнымЛиниям()     
	
	СписокСтатусов = Новый Массив; 	
	Для Каждого ТекЛиния Из КабельныеЛинии Цикл  
			
		Если ТекЛиния.РазрешитьМонтаж Тогда
			СтатусРазрешения = Перечисления.СтатусаМонтажаКППНаОбъекте.МонтажКППРазрешен;
		ИначеЕсли ТекЛиния.ЗапретитьМонтаж Тогда  
			СтатусРазрешения = Перечисления.СтатусаМонтажаКППНаОбъекте.МонтажКППНеРазрешен;
		Иначе
			СтатусРазрешения = Перечисления.СтатусаМонтажаКППНаОбъекте.ЗапросНаРасмотрении;
		КонецЕсли;	
			
		СтатусыРазрешенияМонтажа = Новый Структура("ЖурналУчетаКП, КабельнаяЛиния, Статус", 
			ТекЛиния.ЖурналУчетаКП, ТекЛиния.КабельнаяЛиния, СтатусРазрешения);     
		СписокСтатусов.Добавить(СтатусыРазрешенияМонтажа);			
	КонецЦикла;

	Возврат СписокСтатусов;
	
КонецФункции	

Процедура УстановитьСтатусыКабельныхЛиний(СтатусыРазрешения, ПометкаУдаления)

	Для Каждого ТекСтатус Из СтатусыРазрешения Цикл 
		ТекСтатус.Статус = СтатусыСервер.ПолучитьСтатусКабельнойЛинии(ТекСтатус.Статус, ПометкаУдаления);  
	КонецЦикла;	
	ПроведениеСервер.ЗаписьДанныеВРСДанныеЖКП(СтатусыРазрешения,,Неопределено, Истина);   
	
КонецПроцедуры


Процедура УдалитьСтатусЗаявкиНаМонтаж()   
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписи = РегистрыСведений.ЗаявкиНаМонтажСтатусы.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.Регистратор.Установить(Ссылка);    
	НаборЗаписи.Записать();
	
КонецПроцедуры

Процедура СоздатьИзменитьСтатусЗаявкиНаМонтаж(СтатусЗаявки)   
	
	УстановитьПривилегированныйРежим(Истина);  
	
	НаборЗаписи = РегистрыСведений.ЗаявкиНаМонтажСтатусы.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.Регистратор.Установить(Ссылка);
	
	Для Каждого ТекЛиния Из КабельныеЛинии Цикл   
		Запись                = НаборЗаписи.Добавить();     
		Запись.Дата           = Дата;
		Запись.Номер          = Номер;
		Запись.Статус         = СтатусЗаявки; 		
		Запись.КабельнаяЛиния = ТекЛиния.КабельнаяЛиния;   
		Запись.ЖурналУчетаКП  = ТекЛиния.ЖурналУчетаКП;
	КонецЦикла;		
	НаборЗаписи.Записать();
	
КонецПроцедуры	

Процедура УдалитьСтатусРазрешениеМонтажа()   
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписи = РегистрыСведений.РазрешениеМонтажаКПП.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.Регистратор.Установить(Ссылка);    
	НаборЗаписи.Записать();
	
КонецПроцедуры

Процедура СоздатьИзменитьСтатусРазрешениеМонтажа(СтатусыРазрешения)   
	
	УстановитьПривилегированныйРежим(Истина);  
	
	НаборЗаписи = РегистрыСведений.РазрешениеМонтажаКПП.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.Регистратор.Установить(Ссылка);
	
	Запись = НаборЗаписи.Добавить();     
	Для Каждого ТекЛиния Из СтатусыРазрешения Цикл  
		Запись.ЖурналУчетаКП  = ТекЛиния.ЖурналУчетаКП;
		Запись.КабельнаяЛиния = ТекЛиния.КабельнаяЛиния;   
		Запись.Статус         = ТекЛиния.Статус; 				
	КонецЦикла;	
	
	НаборЗаписи.Записать();
	
КонецПроцедуры

Процедура УстановитьСтатусДокументаПоУмолчанию(ЭтоНовый) 
	
	Если ЭтоНовый И Не ЗначениеЗаполнено(Статус) Тогда 		
		Статус = Перечисления.СтатусыЗаявкиНаМонтаж.НеВыполнено; 
		СоздатьИзменитьСтатусЗаявкиНаМонтаж(Статус);
	КонецЕсли;		
		
КонецПроцедуры

Процедура ПроверкаПодрядчикЗавершаетМонтажПоРассматриваемымКураторомЗаявкам(Отказ, ЭтоПодрядчик)

	Запрос       = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РазрешениеМонтажаКПП.Статус КАК Статус
	               |ИЗ
	               |	РегистрСведений.РазрешениеМонтажаКПП КАК РазрешениеМонтажаКПП
	               |ГДЕ
	               |	РазрешениеМонтажаКПП.Регистратор = &Регистратор";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Количество() = 1 Тогда  
		
		Результат.Следующий();
		Отказ = Результат.Статус = Перечисления.СтатусаМонтажаКППНаОбъекте.ЗапросНаРасмотрении 
			И ЭтоПодрядчик И Не ПометкаУдаления И Статус = Перечисления.СтатусыЗаявкиНаМонтаж.Выполнено;
			
		Если Отказ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя выполнить Пока Куратор не примет решение по данной заявке!")																																								
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаПодрядчикЗавершаетМонтажПоНеРазрешеннымКураторомЗаявке(Отказ, ЭтоПодрядчик)

	Запрос       = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РазрешениеМонтажаКПП.Статус КАК Статус
	               |ИЗ
	               |	РегистрСведений.РазрешениеМонтажаКПП КАК РазрешениеМонтажаКПП
	               |ГДЕ
	               |	РазрешениеМонтажаКПП.Регистратор = &Регистратор";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Количество() = 1 Тогда   
		
		Результат.Следующий();
		Отказ = Результат.Статус = Перечисления.СтатусаМонтажаКППНаОбъекте.МонтажКППНеРазрешен
			И ЭтоПодрядчик И Не ПометкаУдаления И Статус = Перечисления.СтатусыЗаявкиНаМонтаж.Выполнено; 
			
		Если Отказ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя выполнить Пока Куратор не разрешит кабельные линии!")																																								
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

