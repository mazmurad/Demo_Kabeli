   
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда		
		МодульУправленияДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправленияДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Свойство("ЖурналУчетаКабельнойПродукции") И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ЖурналУчетаКабельнойПродукции = Параметры.ЖурналУчетаКабельнойПродукции;	   
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Статус = Перечисления.СтатусыЗаявкиНаМонтаж.НеВыполнено;	
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	УстановитьДоступностьЭлементовФормы();
	
	ЭтотОбъект.ТолькоПросмотр = Объект.Статус = Перечисления.СтатусыЗаявкиНаМонтаж.Выполнено;
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);

	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;	
	КонецЕсли;
	
	ОповеститьОВыборе(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандыФормы
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)

	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры  

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)

	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()

	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)

	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтаФорма, Команда);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)

	МодульЗапретРедактированияРеквизитовОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЗапретРедактированияРеквизитовОбъектовКлиент");	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);    
	МодульЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, Оповещение);
	
КонецПроцедуры 

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	
КонецПроцедуры
#КонецОбласти

#Область СобытияПолейФормы
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если ЭтоИзменениеТекущегоЗадания() Тогда  		
		ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		Записать(ПараметрыЗаписи);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)

	
КонецПроцедуры

&НаКлиенте
Процедура ПодрядчикПриИзменении(Элемент)
	
	Если НельзяРедактироватьПодрядчикаЕстьСвязанныеДокументы(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя редактировать ""Подрядчика"", есть связанные проведенные документы!");
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);		
	Записать(ПараметрыЗаписи);	
	
КонецПроцедуры  

&НаСервереБезКонтекста
Функция НельзяРедактироватьПодрядчикаЕстьСвязанныеДокументы(ДокументСсылка)
	
	ЖурналУчетаКабельнойПродукции = ДокументСсылка.ЖурналУчетаКабельнойПродукции;
	Подрядчик                     = ДокументСсылка.Подрядчик;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЖурналУчетаКабельнойПродукции", ЖурналУчетаКабельнойПродукции);
	Запрос.УстановитьПараметр("Подрядчик", Подрядчик);
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	1 КАК ЕстьЗапись
	               |ИЗ
	               |	РегистрСведений.ДанныеПоЗаявкамНаЗакупку.СрезПоследних(
	               |			,
	               |			ЖурналУчетаКабельнойПродукции = &ЖурналУчетаКабельнойПродукции
	               |				И Подрядчик = &Подрядчик) КАК ДанныеПоЗаявкамНаЗакупкуСрезПоследних
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	1
	               |ИЗ
	               |	РегистрСведений.ДанныеПоМонтажуКабельнойПродукции.СрезПоследних(
	               |			,
	               |			ЖурналУчетаКабельнойЛинии = &ЖурналУчетаКабельнойПродукции
	               |				И Подрядчик = &Подрядчик) КАК ДанныеПоМонтажуКабельнойПродукцииСрезПоследних
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	1
	               |ИЗ
	               |	РегистрСведений.ДанныеПоЖурналамКабельнойПродукции.СрезПоследних(, ЖурналУчетаКабельнойЛинии = &ЖурналУчетаКабельнойПродукции) КАК ДанныеПоЖурналамКабельнойПродукцииСрезПоследних"; 
			
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();  
	
КонецФункции

&НаКлиенте
Функция ЭтоИзменениеТекущегоЗадания()
	
	Возврат ЗначениеЗаполнено(Объект.Ссылка);
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура КабельныеЛинииРазрешитьМонтажПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КабельныеЛинии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	РазрешитьМонтаж = ТекущиеДанные.РазрешитьМонтаж;
	ТекущиеДанные.ЗапретитьМонтаж = Не РазрешитьМонтаж;
	
КонецПроцедуры

&НаКлиенте
Процедура КабельныеЛинииЗапретитьМонтажПриИзменении(Элемент)

	ТекущиеДанные = Элементы.КабельныеЛинии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ЗапретитьМонтаж = ТекущиеДанные.ЗапретитьМонтаж;
	ТекущиеДанные.РазрешитьМонтаж = Не ЗапретитьМонтаж;

КонецПроцедуры

#Область ПрочиеПроцедурыИФункции 
&НаСервере
Процедура УстановитьДоступностьЭлементовФормы()

	РольПодрядчикДоступна                   = УправлениеДоступом.ЕстьРоль("Подрядчик");
	Элементы.Статус.Доступность             = РольПодрядчикДоступна;
	Элементы.ДатаВыдачиВМонтаж.Доступность  = РольПодрядчикДоступна;
	Элементы.ДатаОтчетаОМонтаже.Доступность = РольПодрядчикДоступна;
	
	РольКураторДоступна = УправлениеДоступом.ЕстьРоль("Куратор");
	Элементы.КабельныеЛинииРазрешитьМонтаж.Доступность = РольКураторДоступна;
	Элементы.КабельныеЛинииЗапретитьМонтаж.Доступность = РольКураторДоступна;
		
КонецПроцедуры 
#КонецОбласти
