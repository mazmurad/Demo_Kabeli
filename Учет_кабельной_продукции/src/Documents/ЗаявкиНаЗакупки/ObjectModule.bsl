
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	ЗафиксироватьДанныеНомераВК();	
	
КонецПроцедуры 

Процедура ПриЗаписи(Отказ)
	
	Если ПометкаУдаления Тогда   
		СписокСвязанныхДокументов = КонтрольУдаленияДокументовСервер.ПолучитьСвязанныеДокументыЗаявкиНаЗакупки(Ссылка);		
		КонтрольУдаленияДокументовСервер.ПроверитьЕстьСвязанныеДокументыПередПометкойУдаления(Ссылка, СписокСвязанныхДокументов, Отказ);		
	КонецЕсли;	
	
	СканДокументаПрикреплен = Истина;
	Для Каждого ТекСтрТЧ Из КабельныеЛинии Цикл    
		Если СокрЛП(ТекСтрТЧ.НомерВКНаКПП) = "" Тогда 
			СканДокументаПрикреплен = Ложь;
		КонецЕсли;	
	КонецЦикла;	
	
	СтатусКабельнойЛинии = СтатусыСервер.ПолучитьСтатусКабельнойЛинии(Статус, ПометкаУдаления, СканДокументаПрикреплен);     
	Если ЗначениеЗаполнено(СтатусКабельнойЛинии) Тогда
		ПроведениеСервер.ЗаписьДанныеВРСДанныеЖКП(КабельныеЛинии,,СтатусКабельнойЛинии, Истина);   
	КонецЕсли;	
	
КонецПроцедуры


#Область ПрочиеПроцедурыИФункции
Процедура ЗафиксироватьДанныеНомераВК()  
	
	СписокУдаляемыхКЛ = ОбщегоНазначенияПереопределяемый.СписокУдаляемыхСтрокКабельныеЛинии(Ссылка, КабельныеЛинии);
	Для Каждого УдаляемыйКабель Из СписокУдаляемыхКЛ Цикл   
		МенеджерЗаписи = РегистрыСведений.АктВходногоКонтроляНаКЛ.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.КабельнаяЛиния = УдаляемыйКабель;
		МенеджерЗаписи.Удалить();				
	КонецЦикла;	
		
	Для Каждого ТекСтр Из КабельныеЛинии Цикл          
		
		Состояние = Перечисления.СтатусыВК.ВКНеПройден;
		Если СокрЛП(ТекСтр.НомерВКНаКПП) <> "" Тогда    
			Состояние = Перечисления.СтатусыВК.ВКПройден;
		КонецЕсли;

		МенеджерЗаписи = РегистрыСведений.АктВходногоКонтроляНаКЛ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ТекСтр);
		МенеджерЗаписи.Состояние = Состояние;
		МенеджерЗаписи.Записать();		
	КонецЦикла;	
	
КонецПроцедуры	


#КонецОбласти  
