  
// +БЛОК3  
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОтВладельцаНеПереданЖурналКП(Отказ) Тогда 
		Возврат;
	КонецЕсли;	
	
	ПодключаемыеКомандыПриСоздании();
		
	Объект.ЖурналУчетаКабельнойПродукции = Параметры.ЖурналУчетаКабели;	 	
	ЗаполнитьЗначенияСвойств(Объект, Объект.ЖурналУчетаКабельнойПродукции);  	 
	
	// Поиск строки кабельной линии в ЖК и вывод на форму
	КабельнаяЛинияДляПоиска = Параметры.КабельнаяЛиния;	
	СтрокаКабельнаяЛинияЖК = Объект.ЖурналУчетаКабельнойПродукции.КабельныеЛинии.Найти(КабельнаяЛинияДляПоиска, "КабельнаяЛиния");
    ЗаполнитьЗначенияСвойств(Объект, СтрокаКабельнаяЛинияЖК); 
	
	ОтборЗаданийНаЗакупкиПоКабельнойЛинии();
	ОтборЗаявокНаЗакупкиПоКабельнойЛинии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы.ТекущаяСтраница);	
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда 		
		ДанныеВозврат = Новый Структура("ЖурналКабельнойПродукции, КабельнаяЛиния", Объект.ЖурналУчетаКабельнойПродукции, Объект.КабельнаяЛиния);
		Оповестить("ИзменениеЖурналаКабельнойПродукции", ДанныеВозврат);		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти


#Область СобытияКомандФормы
&НаКлиенте
Процедура ВыбратьПроект(Команда)
	
	ПараметрыФормыВыбора = ПолучитьПараметрыФормыВыбора(Объект.Проект);		
	ДопПараметры         = Новый Структура("ИмяРеквизита", "Проект");
	
	ОткрытьФорму("Справочник.Проекты.ФормаВыбора", ПараметрыФормыВыбора, 
		ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьЗавершение", ЭтотОбъект, ДопПараметры));
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКабельнаяЛиния(Команда)

	ПараметрыФормыВыбора = ПолучитьПараметрыФормыВыбора(Объект.КабельнаяЛиния);	
	ДопПараметры         = Новый Структура("ИмяРеквизита", "КабельнаяЛиния");
	
	КабельнаяЛинияДляПоиска = Объект.КабельнаяЛиния;
	
	ОткрытьФорму("Справочник.КабельныеЛинии.ФормаВыбора", ПараметрыФормыВыбора, 
		ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьЗавершение", ЭтотОбъект, ДопПараметры));		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОткудаКоординаты(Команда)

	ПараметрыФормыВыбора = ПолучитьПараметрыФормыВыбора(Объект.ОткудаКоординаты);	
	ДопПараметры         = Новый Структура("ИмяРеквизита", "ОткудаКоординаты");
	
	ОткрытьФорму("Справочник.Координаты.ФормаВыбора", ПараметрыФормыВыбора, 
		ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьЗавершение", ЭтотОбъект, ДопПараметры));		

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКудаКоординаты(Команда)

	ПараметрыФормыВыбора = ПолучитьПараметрыФормыВыбора(Объект.КудаКоординаты);	
	ДопПараметры         = Новый Структура("ИмяРеквизита", "КудаКоординаты");
	
	ОткрытьФорму("Справочник.Координаты.ФормаВыбора", ПараметрыФормыВыбора, 
		ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьЗавершение", ЭтотОбъект, ДопПараметры));		
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ЖурналУчетаКабельнойПродукции) Тогда
		Возврат;	
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЖурналУчетаКабельнойПродукции Тогда

		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки;  
		УстановитьВидимостьСтраниц(Элементы.СтраницаЗаданияНаЗакупки);
  	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки Тогда

		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку;
		УстановитьВидимостьСтраниц(Элементы.ЗаявкиНаЗакупку);
  	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку Тогда

		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Монтаж;
		УстановитьВидимостьСтраниц(Элементы.Монтаж);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Монтаж Тогда

		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СдачаРабот;
		УстановитьВидимостьСтраниц(Элементы.СдачаРабот);
	КонецЕсли;	
	
	ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СдачаРабот Тогда   
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Монтаж; 
		УстановитьВидимостьСтраниц(Элементы.Монтаж);		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Монтаж Тогда 
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку;
		УстановитьВидимостьСтраниц(Элементы.ЗаявкиНаЗакупку);		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку Тогда   
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки; 
		УстановитьВидимостьСтраниц(Элементы.СтраницаЗаданияНаЗакупки);		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки Тогда 
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЖурналУчетаКабельнойПродукции; 
		УстановитьВидимостьСтраниц(Элементы.ЖурналУчетаКабельнойПродукции);		
	КонецЕсли;
	
	ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы.ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтраниц(ТекущаяСтраница)
	
	Элементы.ЖурналУчетаКабельнойПродукции.Видимость = ТекущаяСтраница = Элементы.ЖурналУчетаКабельнойПродукции;		
	Элементы.СтраницаЗаданияНаЗакупки.Видимость               = ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки;
	Элементы.ЗаявкиНаЗакупку.Видимость               = ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку;
    Элементы.Монтаж.Видимость                        = ТекущаяСтраница = Элементы.Монтаж;
	Элементы.СдачаРабот.Видимость                    = ТекущаяСтраница = Элементы.СдачаРабот;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(ТекущаяСтраница)
	
	ВсегоСтраниц       = 5;	
	ДобавочнаяСтраница = 1;
	
	Элементы.ДобавитьФайлы.Видимость = Ложь;
	
	Если ТекущаяСтраница = Элементы.ЖурналУчетаКабельнойПродукции Тогда
		
		НомерСтраницы = 1;	
		Элементы.ДобавитьФайлы.Видимость = Истина;
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаЗаданияНаЗакупки Тогда
		
		НомерСтраницы = 1 + ДобавочнаяСтраница;	
	ИначеЕсли ТекущаяСтраница = Элементы.ЗаявкиНаЗакупку Тогда
		
		НомерСтраницы = 2 + ДобавочнаяСтраница;	
	ИначеЕсли ТекущаяСтраница = Элементы.Монтаж Тогда
		
		НомерСтраницы = 3 + ДобавочнаяСтраница;	
	ИначеЕсли ТекущаяСтраница = Элементы.СдачаРабот Тогда
		
		НомерСтраницы = 4 + ДобавочнаяСтраница;		
	КонецЕсли;	
	
	Элементы.ДекорацияКоличествоСтраниц.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Стр. %1 из %2 ", НомерСтраницы, ВсегоСтраниц);
	
	Элементы.ФормаНазад.Видимость = НомерСтраницы <> 1;
	Элементы.ФормаДалее.Видимость = НомерСтраницы <> 5;
	
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиСобытийПолейФормы
&НаКлиенте
Процедура ИзмОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст);
	
КонецПроцедуры
    
&НаКлиенте
Процедура ДлинаПроектаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст);

КонецПроцедуры

&НаКлиенте
Процедура НомерППОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОткудаПомещениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОткудаОборудованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура КудаПомещениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КудаОборудованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура НомерВКОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КабельнаяЛинияНомерНитки1ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ОбъектОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	СохрнаитьИзмененияПолейФормы(Элемент, Текст, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура РазрешитьМонтажПриИзменении(Элемент)
	
	СохрнаитьИзмененияПолейФормы(Элемент, Объект.Проверена, Ложь);

КонецПроцедуры
#КонецОбласти
// - БЛОК3

#Область СобытияТабличныхЧастей  
&НаКлиенте
Процедура ЗаданияНаМонтаж1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Задание);
	
	ОткрытьФорму("Документ.ЗаданияНаМонтаж.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаданиеНаМонтаж(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаданиеНеЗадвоено() Тогда		
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();	
	ПараметрыФормы.Вставить("ЖурналУчетаКабельнойПродукции", Объект.ЖурналУчетаКабельнойПродукции); 
	
	ОткрытьФорму("Документ.ЗаданияНаМонтаж.Форма.ФормаДокумента",ПараметрыФормы, ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаданиеНеЗадвоено()

	СтрокиЗадания = Объект.ЗаданияНаМонтаж.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));		
	Если СтрокиЗадания.Количество() = 0 Тогда   
	Иначе	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Задание уже создано, нельзя дублировать!");				
		Возврат Ложь;
	КонецЕсли;		
	
	Возврат Истина; 
	
КонецФункции

&НаКлиенте
Процедура СоздатьЗаявкуНаЗакупку(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЕстьСозданноеЗаданиеНаЗакупкуЗаявкаНеЗадвоена() Тогда		
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();	
	ПараметрыФормы.Вставить("ЖурналУчетаКабельнойПродукции", Объект.ЖурналУчетаКабельнойПродукции); 
	ПараметрыФормы.Вставить("Подрядчик",                     Объект.Подрядчик); 
	ПараметрыФормы.Вставить("ЭтоРабочееМесто",               Истина);
	
	ОткрытьФорму("Документ.ЗаявкиНаЗакупки.ФормаОбъекта",ПараметрыФормы,ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЕстьСозданноеЗаданиеНаЗакупкуЗаявкаНеЗадвоена()

	СтрокиЗаявки = Объект.ЗаявкиНаЗакупку.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));	
	
	Если СтрокиЗаявки.Количество() = 0 Тогда   
	Иначе	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заявка уже создана, нельзя дублировать!");				
		Возврат Ложь;
	КонецЕсли;	
	
	СтрокиЗаданий = Объект.ЗаданияНаМонтаж.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));	
	
	Если СтрокиЗаданий.Количество() > 0 И СтрокиЗаданий[0].Статус = Перечисления.СтатусыЗаданийНаЗакупку.Создано Тогда    
	Иначе   
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет задания в статусе ""Создан""!");		
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат Истина; 
	
КонецФункции

&НаКлиенте
Процедура ЗаявкиНаЗакупку1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(); 
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Заявка); 
	
	ОткрытьФорму("Документ.ЗаявкиНаЗакупки.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);  
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМонтаж(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЕстьВыполненнаяЗаявкаНаЗакупкуМонтажНеЗадвоен() Тогда		
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();	
	ПараметрыФормы.Вставить("ЖурналУчетаКабельнойПродукции", Объект.ЖурналУчетаКабельнойПродукции); 
	ПараметрыФормы.Вставить("Подрядчик",                     Объект.Подрядчик);  
	ПараметрыФормы.Вставить("ЭтоРабочееМесто",               Истина);
	
	ОткрытьФорму("Документ.МонтажКабельнойПродукции.ФормаОбъекта",ПараметрыФормы,ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЕстьВыполненнаяЗаявкаНаЗакупкуМонтажНеЗадвоен()

	СтрокиМонтаж = Объект.МонтажныеРаботы.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));		
	Если СтрокиМонтаж.Количество() = 0 Тогда   
	Иначе	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Монтаж уже создан, нельзя дублировать!");				
		Возврат Ложь;
	КонецЕсли;	
	
	СтрокиЗаявок = Объект.ЗаявкиНаЗакупку.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));		
	Если СтрокиЗаявок.Количество() > 0 И СтрокиЗаявок[0].Заявка.Статус = Перечисления.СтатусыЗаявкиНаЗакупку.Выполнена Тогда    
	Иначе   
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет заявки в статусе ""Выполнена""!");		
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат Истина; 
	
КонецФункции

&НаКлиенте
Процедура МонтажныеРаботыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Монтаж); 
	
	ОткрытьФорму("Документ.МонтажКабельнойПродукции.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуНаПредъявлениеВыполненныхЭМР(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЕстьВыполненныйМонтажЗаявкаНеЗадвоена() Тогда		
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();	
	ПараметрыФормы.Вставить("ЖурналУчетаКабельнойПродукции", Объект.ЖурналУчетаКабельнойПродукции); 
	ПараметрыФормы.Вставить("Подрядчик",                     Объект.Подрядчик); 
	ПараметрыФормы.Вставить("ЭтоРабочееМесто",               Истина);
	
	ОткрытьФорму("Документ.ЗаявкиНаПредъявлениеВыполненныхЭМР.ФормаОбъекта", ПараметрыФормы,ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЕстьВыполненныйМонтажЗаявкаНеЗадвоена()

	СтрокиЗаявки = Объект.ЗаявкиНаПредъявлениеВыполненныхЭМР.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));		
	Если СтрокиЗаявки.Количество() = 0 Тогда   
	Иначе	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заявка уже создана, нельзя дублировать!");				
		Возврат Ложь;
	КонецЕсли;	
	
	СтрокиМонтаж = Объект.МонтажныеРаботы.Выгрузить(Новый Структура("ПометкаУдаления", Ложь));		
	Если СтрокиМонтаж.Количество() > 0 И СтрокиМонтаж[0].Монтаж.Статус = Перечисления.СтатусыЗаявкиНаМонтаж.Выполнен Тогда    
	Иначе   
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет монтажа в статусе ""Выполнен""!");		
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат Истина; 
	
КонецФункции

&НаКлиенте
Процедура ЗаявкиНаПредъявлениеВыполненныхЭМРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(); 
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Заявка);
	
	ОткрытьФорму("Документ.ЗаявкиНаПредъявлениеВыполненныхЭМР.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаданияНаМонтаж1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", Элемент.ТекущиеДанные.Задание); 
	
	ОткрытьФорму("Документ.ЗаявкиНаЗакупки.ФормаОбъекта",ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
КонецПроцедуры

#Область ПометкаУдаленияДокументов
&НаКлиенте
Процедура УдалитьЗаданиеНаМонтаж(Команда)
		
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.ЗаданияНаЗакупки.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ДокументСсылка                = ТекущиеДанные.Задание;
	ТекущиеДанные.ПометкаУдаления = ВыполнитьПометкуУдаленияДокумента(ДокументСсылка);	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаявкуНаЗакупку(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.ЗаявкиНаЗакупку1.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ДокументСсылка                = ТекущиеДанные.Заявка;	
	ТекущиеДанные.ПометкаУдаления = ВыполнитьПометкуУдаленияДокумента(ДокументСсылка);	
	
КонецПроцедуры  

&НаКлиенте
Процедура УдалитьМонтажнуюРаботу(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.МонтажныеРаботы.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ДокументСсылка                = ТекущиеДанные.Монтаж;	
	ТекущиеДанные.ПометкаУдаления = ВыполнитьПометкуУдаленияДокумента(ДокументСсылка);	

КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаявкуНаПредъявлениеВыполненныхЭМР(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.ЗаявкиНаПредъявлениеВыполненныхЭМР.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ДокументСсылка                = ТекущиеДанные.Заявка;	
	ТекущиеДанные.ПометкаУдаления = ВыполнитьПометкуУдаленияДокумента(ДокументСсылка);	
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьПометкуУдаленияДокумента(ДокументСсылка)
	
	Если НельзяУдалитьЕстьСвязанныеДокументы1(ДокументСсылка) Тогда     
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Есть связанные документы, нельзя удалить текущий документ!");
		Возврат Ложь;	
	КонецЕсли;
	
	Возврат ПометитьНаУдалениеДокументНаСервере(ДокументСсылка);
	
КонецФункции

&НаКлиенте
Функция НельзяУдалитьЕстьСвязанныеДокументы1(ДокументСсылка)
	
	ПроведенныеЗаявкиНаЗакупку      = Объект.ЗаявкиНаЗакупку.НайтиСтроки(Новый Структура("ПометкаУдаления", Ложь));
	ПроведенныеМонтажи              = Объект.МонтажныеРаботы.НайтиСтроки(Новый Структура("ПометкаУдаления", Ложь));
	ПроведенныеЗаявкиНаПредъявление = Объект.ЗаявкиНаПредъявлениеВыполненныхЭМР.НайтиСтроки(Новый Структура("ПометкаУдаления", Ложь));
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаданияНаМонтаж") Тогда
		
		Возврат ПроведенныеЗаявкиНаЗакупку.Количество() > 0 ИЛИ ПроведенныеМонтажи.Количество() > 0
			ИЛИ ПроведенныеЗаявкиНаПредъявление.Количество() > 0;
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаявкиНаЗакупки") тогда
		
		Возврат ПроведенныеМонтажи.Количество() > 0
			ИЛИ ПроведенныеЗаявкиНаПредъявление.Количество() > 0;
			
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.МонтажКабельнойПродукции") тогда
		
		Возврат ПроведенныеЗаявкиНаПредъявление.Количество() > 0;
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПометитьНаУдалениеДокументНаСервере(ДокументСсылка) 
		
	ДокОбъект = ДокументСсылка.ПолучитьОбъект();	
	ДокОбъект.УстановитьПометкуУдаления(Истина);
	
	Возврат Истина;
	
КонецФункции
#КонецОбласти
#КонецОбласти


#Область ПодключаемыеКомандыБСП 
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)    
	
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект.ЖурналУчетаКабельнойПродукции);  
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры)

	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)   
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект.ЖурналУчетаКабельнойПродукции); 
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()   
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект.ЖурналУчетаКабельнойПродукции);   
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)   
	
	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);   
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)   
	
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);   
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)   
	
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);   
	
КонецПроцедуры  

&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)   
	
	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);   
	
КонецПроцедуры  
#КонецОбласти


#Область СлужебныеПроцедурыИФункции  
&НаСервере
Процедура ПодключаемыеКомандыПриСоздании()

	ПараметрыРазмещения = Новый Структура;  
	ПараметрыРазмещения.Вставить("Источники", Новый ОписаниеТипов("СправочникСсылка.ЖурналыУчетаКабельнойПродукции"));
	ПараметрыРазмещения.Вставить("КоманднаяПанель", ЭтаФорма.КоманднаяПанель);
    ПараметрыРазмещения.Вставить("ПрефиксГрупп", "");	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыФормыВыбора(КлючДанных) 
	
	Данные = Новый Структура;
	Данные.Вставить("Ключ",          КлючДанных); 
	Данные.Вставить("РежимВыбора",   Истина);
	Данные.Вставить("ТекущаяСтрока", КлючДанных);
	
	Возврат Данные;
	
КонецФункции	

&НаСервере
Функция ОтВладельцаНеПереданЖурналКП(Отказ)
	
	Если Не Параметры.Свойство("ЖурналУчетаКабели") Тогда
		Отказ = Истина;
	КонецЕсли;	
	
	Возврат Отказ;
	
КонецФункции

 &НаКлиенте
Процедура СохрнаитьИзмененияПолейФормы(Элемент, Текст, Число=Истина)

	Объект[Элемент.Имя] = ?(Число, Число(Текст), Текст);	
	ИзменитьЖурналУчетаКабели(Объект.ЖурналУчетаКабельнойПродукции);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда		
		Если ДополнительныеПараметры.Свойство("ИмяРеквизита") Тогда
			Объект[ДополнительныеПараметры.ИмяРеквизита] = Результат;			
		КонецЕсли;	
	КонецЕсли;
	ИзменитьЖурналУчетаКабели(Объект.ЖурналУчетаКабельнойПродукции);
	
КонецПроцедуры 

&НаСервере
Процедура ИзменитьЖурналУчетаКабели(СсылкаЖурнал)
	
	ОбъектЖурнал   = СсылкаЖурнал.ПолучитьОбъект();
	КабельныеЛинии = ОбъектЖурнал.КабельныеЛинии.НайтиСтроки(
		Новый Структура("КабельнаяЛиния", КабельнаяЛинияДляПоиска));
		
	Если КабельныеЛинии.Количество() = 0 Тогда
		СтрКабЛиния = ОбъектЖурнал.КабельныеЛинии.Добавить();
	Иначе
		СтрКабЛиния = КабельныеЛинии[0];
	КонецЕсли;		
	//	
	ЗаполнитьЗначенияСвойств(ОбъектЖурнал, Объект);	
	ЗаполнитьЗначенияСвойств(СтрКабЛиния,  Объект);		
	ОбъектЖурнал.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ОтборЗаданийНаЗакупкиПоКабельнойЛинии()  
	
	ЗаданияНаЗакупки.Параметры.УстановитьЗначениеПараметра("КабельнаяЛиния", КабельнаяЛинияДляПоиска);
	
КонецПроцедуры	

&НаСервере
Процедура ОтборЗаявокНаЗакупкиПоКабельнойЛинии()  
	
	ЗаявкиНаЗакупки.Параметры.УстановитьЗначениеПараметра("КабельнаяЛиния", КабельнаяЛинияДляПоиска);
	
КонецПроцедуры
#КонецОбласти


