
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодключаемыеКомандыПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура ПодключаемыеКомандыПриСоздании()

	ПараметрыРазмещения = Новый Структура;  
	ПараметрыРазмещения.Вставить("Источники", Новый ОписаниеТипов("СправочникСсылка.ЖурналыУчетаКабельнойПродукции"));
	ПараметрыРазмещения.Вставить("КоманднаяПанель", ЭтаФорма.КоманднаяПанель);
    ПараметрыРазмещения.Вставить("ПрефиксГрупп", "");	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда		
		Возврат;				
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("ЖурналУчетаКабели", Элемент.ТекущаяСтрока); 	
	ОткрытьФорму("Обработка.ИнтерфейсРабочегоМеста.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДанныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОткрытьФорму("Обработка.ИнтерфейсРабочегоМеста.Форма",,,УникальныйИдентификатор,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
	Отказ = Истина;	
		
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	КнопкиВыбора = Новый СписокЗначений();   
	КнопкиВыбора.Добавить("Создать",   "Создать");
	КнопкиВыбора.Добавить("Загрузить", "Загрузить из файла");
	КнопкиВыбора.Добавить("Отменить",  "Отменить");	
	
    ОповещениеОбработкаВыбора = Новый ОписаниеОповещения("ОбработкаВыбораСоздать", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеОбработкаВыбора, "", КнопкиВыбора,,, "Выберите действие!"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСоздать(Результат, ДопПараметры) Экспорт
	
	Если Результат = "Создать" Тогда 
		
		ОткрытьФорму("Обработка.ИнтерфейсРабочегоМеста.Форма.Форма",, ЭтаФорма, УникальныйИдентификатор,
					 ,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);   
		
	ИначеЕсли Результат = "Загрузить" Тогда	
		
		ОбработчикЗавершения = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтотОбъект);
		
		ПараметрыДиалога           = Новый ПараметрыДиалогаПомещенияФайлов();		
		ПараметрыДиалога.Заголовок = "Выберите загружаемый файл!";   
		ПараметрыДиалога.Фильтр    = "Excel документ|*.xlsx;*.xls";
		
		НачатьПомещениеФайлаНаСервер(ОбработчикЗавершения,,,, 
									 ПараметрыДиалога, 
									 УникальныйИдентификатор)		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораФайла(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	АдресВременногоХранилищаФайла = РезультатВыбора.Адрес;	
	РасширениеФайла               = СтрЗаменить(РезультатВыбора.СсылкаНаФайл.Расширение, ".", "");
	
	ОткрытьИнтерфейсЗагрузкиФайлаЭксель(АдресВременногоХранилищаФайла, РасширениеФайла);
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьИнтерфейсЗагрузкиФайлаЭксель(АдреВременногоХранилищаФайла, РасширениеФайла)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресДвоичныхДанных", АдреВременногоХранилищаФайла);
	ПараметрыФормы.Вставить("РасширениеФайла",     РасширениеФайла);	
	ОткрытьФорму("Обработка.ЗагрузкаЖурналУчетаКабельнойПродукции.Форма", ПараметрыФормы, 
				 ЭтотОбъект, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


#Область ОбрабочикиДляОтборов
&НаКлиенте
Процедура ОтборЖурналыКП(Команда)

	ДопПараметры = Новый Структура("ИмяПоля", "ЖурналКабельнойПродукции");
	ОповещениеВыбор = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", ЖурналКабельнойПродукции);
	ОткрытьФорму("Справочник.ЖурналыУчетаКабельнойПродукции.ФормаВыбора", ПараметрыФормы, КабельнаяЛиния, УникальныйИдентификатор,,,
				 ОповещениеВыбор, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборКабельнаяЛиния(Команда)
	
	ДопПараметры = Новый Структура("ИмяПоля", "КабельнаяЛиния");
	ОповещениеВыбор = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", КабельнаяЛиния);
	ОткрытьФорму("Справочник.КабельныеЛинии.ФормаВыбора", ПараметрыФормы, КабельнаяЛиния, УникальныйИдентификатор,,,
				 ОповещениеВыбор, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры


&НаКлиенте
Процедура ЖурналПриИзменении(Элемент)
	
	УстановитьОтборСписка("ЖурналКабельнойПродукции", ЖурналКабельнойПродукции);	
	
	Если Не ЗначениеЗаполнено(ЖурналКабельнойПродукции) Тогда
		УдалитьОтборСписка("ЖурналКабельнойПродукции");	
	КонецЕсли;	
		
КонецПроцедуры


&НаКлиенте
Процедура КабельнаяЛинияПриИзменении(Элемент)

	УстановитьОтборСписка("КабельнаяЛиния", КабельнаяЛиния);	
	
	Если Не ЗначениеЗаполнено(КабельнаяЛиния) Тогда
		УдалитьОтборСписка("КабельнаяЛиния");	
	КонецЕсли;					
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодрядчик(Команда)
	
	ДопПараметры = Новый Структура("ИмяПоля", "Подрядчик");
	ОповещениеВыбор = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", Подрядчик);
	ОткрытьФорму("Справочник.Подрядчик.ФормаВыбора", ПараметрыФормы, Подрядчик, УникальныйИдентификатор,,,
				 ОповещениеВыбор, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодрядчикПриИзменении(Элемент)

	УстановитьОтборСписка("КомуВыдано", Подрядчик);	
	
	Если Не ЗначениеЗаполнено(Подрядчик) Тогда
		УдалитьОтборСписка("КомуВыдано");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗаявкиПриИзменении(Элемент)

	УстановитьОтборСписка("СтатусЗаявки", СтатусЗаявки);	
	
	Если Не ЗначениеЗаполнено(СтатусЗаявки) Тогда
		УдалитьОтборСписка("СтатусЗаявки");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлассБезопасностиПриИзменении(Элемент)

	УстановитьОтборСписка("КлассБезопасности", КлассБезопасности);	
	
	Если Не ЗначениеЗаполнено(КлассБезопасности) Тогда
		УдалитьОтборСписка("КлассБезопасности");	
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗавершенныеПриИзменении(Элемент)
		
	Если Завершенные Тогда  
		Статус = ПредопределенноеЗначение("Перечисление.СтатусыКабельныхЛиний.Подписан");
	Иначе
		Статус = Неопределено;
	КонецЕсли;
	
	УстановитьОтборСписка("ПодтверждениеВыполненияМонтажа", Статус);	
	
	Если Не ЗначениеЗаполнено(Статус) Тогда
		УдалитьОтборСписка("ПодтверждениеВыполненияМонтажа");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗавершение(Результат, ДопПараметры) Экспорт

	ЭтотОбъект[ДопПараметры.ИмяПоля] = Результат;
	
	УстановитьОтборСписка(ДопПараметры.ИмяПоля, Результат);	
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		УдалитьОтборСписка(ДопПараметры.ИмяПоля);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеПолейДляОтбора(ИмяПоля)

	Если ИмяПоля = "Подрядчик" Тогда
		Возврат "КомуВыдано";	
	КонецЕсли;
	
	Возврат ИмяПоля;
	
КонецФункции


&НаКлиенте
Процедура ОчиститьОтборы(Команда)

	ФиксНастройки = ОсновныеДанные.КомпоновщикНастроек.ФиксированныеНастройки;	
	ФиксНастройки.Отбор.Элементы.Очистить();
	
	ЖурналКабельнойПродукции           = "";
	КабельнаяЛиния    = Неопределено;
	Подрядчик         = Неопределено;
	СтатусЗаявки      = Неопределено;
	КлассБезопасности = 0; 
	Завершенные       = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСписка(ИмяПоля, ЗначениеОтбора)
	
	ИмяПоля = ПолучитьПредставлениеПолейДляОтбора(ИмяПоля);
	
	ЭлементОтбора = НайтиТекущийОтбор(ИмяПоля);	
	
	Если ЭлементОтбора = Неопределено Тогда		
		ФиксНастройки = ОсновныеДанные.КомпоновщикНастроек.ФиксированныеНастройки;	
		ЭлементОтбора = ФиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	КонецЕсли;
	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);   
	ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение= ЗначениеОтбора;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОтборСписка(ИмяПоля)
	
	ИмяПоля = ПолучитьПредставлениеПолейДляОтбора(ИмяПоля);
	
	ТекущийОтбор  = НайтиТекущийОтбор(ИмяПоля);	
	
	ФиксНастройки = ОсновныеДанные.КомпоновщикНастроек.ФиксированныеНастройки;	
	Если ТекущийОтбор <> Неопределено Тогда
		ФиксНастройки.Отбор.Элементы.Удалить(ТекущийОтбор);			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиТекущийОтбор(ИмяПоля)

	ФиксНастройки = ОсновныеДанные.КомпоновщикНастроек.ФиксированныеНастройки;	
	
	ТекущийОтбор  = Неопределено;	
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	
	Для Каждого ПроверяемыйОтбор Из ФиксНастройки.Отбор.Элементы Цикл		
		Если ПроверяемыйОтбор.ЛевоеЗначение = ЛевоеЗначение Тогда
			ТекущийОтбор = ПроверяемыйОтбор;	
		КонецЕсли;
	КонецЦикла;  
	
	Возврат ТекущийОтбор;
	
КонецФункции
#КонецОбласти   


#Область ПодключаемыеКомандыБСП 
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)    
	
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.ОсновныеДанные);  
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры)

	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)   
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.ОсновныеДанные); 
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()   
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.ОсновныеДанные);   
	
КонецПроцедуры
#КонецОбласти   
